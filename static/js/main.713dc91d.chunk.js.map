{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","console","log","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","paddingRight","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.713dc91d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        // same as pushing it onto the state\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        // if the conact is equal to the payload.id then update the contact else return\n        // do nothing\n        contacts: state.contacts.map(\n          // the id in the payload comes from the API response\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    // waits for it to finish then puts the data in res\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Contact.css\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nexport default class Contact extends Component {\n  state = {\n    showContactInfo: true\n  };\n\n  // same as the type checking at the end of this file\n  static propTypes = {\n    contact: PropTypes.object.isRequired\n  };\n\n  onShowClick = e => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    // added this because the API doesn't allow adding data\n    // so it's trying to delete something that isn't there\n    // but you still want it to actually remove the contact on the frontend\n    try {\n      // waits until this returns then does the below dispatch\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    } catch (e) {\n      console.log(e);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    // destructuring to pass values\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      paddingRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{email}</li>\n                  <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n// Contact.propTypes = {\n//   deleteClickHandler: PropTypes.func.isRequired\n// };\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact </span>\n                List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// for modifying classnames\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        //   default classnames then those that are conditional\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    //   prevents default submitting of the form\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required.\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required.\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required.\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    // newContact is the data about the new user that you're sending\n    const res = await axios.post(\n      `https://jsonplaceholder.typicode.com/users`,\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // clear the form after submission\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // redirect back to the home page\n    this.props.history.push(\"/\");\n  };\n\n  // the brackets get the value of the name attribute of whatever calls onChange\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form\n                  className=\"form-group\"\n                  onSubmit={this.onSubmit.bind(this, dispatch)}\n                >\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter your name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    type=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter your email address...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter your phone number...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nexport default class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    //   prevents default submitting of the form\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required.\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required.\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required.\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    // the id in the payload comes from the API response\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // clear the form after submission\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // redirect back to the home page\n    this.props.history.push(\"/\");\n  };\n\n  // the brackets get the value of the name attribute of whatever calls onChange\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form\n                  className=\"form-group\"\n                  onSubmit={this.onSubmit.bind(this, dispatch)}\n                >\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter your name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    type=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter your email address...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter your phone number...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-success mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\">{branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              {/* react router link */}\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              {/* react router link */}\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              {/* react router link */}\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// displays if there is no prop, an empty string doesn't count as no prop\nHeader.defaultProps = {\n  branding: \"Default title\"\n};\n\n// type checking, will display warning in console if type is incorrect\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        About Contact Manager\n        {/* how you get paramaters from the url */}\n        {/* {props.match.params.id} */}\n      </h1>\n      <p>Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  // part of the component class\n  //   where you would normally make API calls\n  componentDidMount() {\n    console.log(\"component did mount\");\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(json =>\n        this.setState({\n          title: json.title,\n          body: json.body\n        })\n      );\n  }\n\n  // deprechiated\n  //   runs before mounting\n  //   componentWillMount() {\n  //     console.log(\"component did mount\");\n  //   }\n\n  //   // deprechiated\n  //   componentWillUpdate() {\n  //     console.log(\"runs when state changes for the component\");\n  //   }\n\n  //   componentDidlUpdate() {\n  //     console.log(\"runs when state changes for the component\");\n  //   }\n\n  //   // deprechiated, bascially all the wills are being deprecated because of lack of async\n  //   // to use you have to put UNSAFE_ before them\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log(\"manipulate props before use\");\n  //   }\n\n  //   static getDerivedStateFromProps(nextProps, prevState) {\n  //     // you must return something with this method\n  //     return null;\n  //   }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// browser router stores the route components\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport Header from \"./components/layout//Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                {/* <Route exact path=\"/about/:id\" component={About} /> */}\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                {/* default route */}\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}